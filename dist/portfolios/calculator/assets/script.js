class Calculator{constructor(e,t){this.previousOperandTextElement=e,this.currentOperandTextElement=t,this.clear()}clear(){this.currentOperand="",this.previousOperand="",this.operation=void 0,this.clearAlerts()}clearAlerts(){document.querySelector("[data-error]").innerText="",document.querySelector("[data-error]").style.opacity=0}delete(){this.currentOperand=this.currentOperand.toString().slice(0,-1),this.clearAlerts()}appendNumber(e){"."===e&&this.currentOperand.includes(".")||(this.currentOperand=this.currentOperand.toString()+e.toString(),this.equalPressed&&(this.currentOperand=e.toString(),this.equalPressed=!1))}chooseOperation(e){""!==this.currentOperand&&(""!==this.previousOperand&&this.compute(),this.operation=e,this.previousOperand=this.currentOperand,this.currentOperand="")}changeSign(){this.currentOperand=-1*this.currentOperand,this.clearAlerts()}getSqrt(){if(this.currentOperand<0)return document.querySelector("[data-error]").innerText="ОШИБКА!\nПопытка извлечь корень из отрицательного числа!",void(document.querySelector("[data-error]").style.opacity=1);this.clearAlerts(),this.currentOperand=Math.sqrt(this.currentOperand)}getPercent(){this.currentOperand=this.currentOperand/100}compute(){let e;const t=parseFloat(this.previousOperand),r=parseFloat(this.currentOperand);if(!isNaN(t)&&!isNaN(r)){switch(this.operation){case"+":e=parseFloat((t+r).toFixed(16));break;case"-":e=parseFloat((t-r).toFixed(16));break;case"×":e=parseFloat((t*r).toFixed(16));break;case"÷":e=parseFloat((t/r).toFixed(16));break;case"pow":e=parseFloat(Math.pow(t,r).toFixed(16));break;default:return}this.currentOperand=e,this.operation=void 0,this.previousOperand=""}}getDisplayNumber(e){const t=e.toString(),r=parseFloat(t.split(".")[0]),a=t.split(".")[1];let n;return n=isNaN(r)?"":r.toLocaleString("en",{maximumFractionDigits:0}),null!=a?`${n}.${a}`:n}updateDisplay(){this.currentOperandTextElement.innerText=this.getDisplayNumber(this.currentOperand),null!=this.operation?this.previousOperandTextElement.innerText=`${this.getDisplayNumber(this.previousOperand)} ${this.operation}`:this.previousOperandTextElement.innerText=""}}const numberButtons=document.querySelectorAll("[data-number]"),operationButtons=document.querySelectorAll("[data-operation]"),equalsButton=document.querySelector("[data-equals]"),deleteButton=document.querySelector("[data-delete]"),allClearButton=document.querySelector("[data-all-clear]"),previousOperandTextElement=document.querySelector("[data-previous-operand]"),currentOperandTextElement=document.querySelector("[data-current-operand]"),signButton=document.querySelector("[data-sign]"),sqrtButton=document.querySelector("[data-sqrt]"),percentButton=document.querySelector("[data-percent]"),calculator=new Calculator(previousOperandTextElement,currentOperandTextElement);numberButtons.forEach((e=>{e.addEventListener("click",(()=>{calculator.appendNumber(e.innerText),calculator.updateDisplay()}))})),operationButtons.forEach((e=>{e.addEventListener("click",(()=>{calculator.chooseOperation(e.dataset.operation),calculator.updateDisplay()}))})),equalsButton.addEventListener("click",(()=>{calculator.equalPressed=!0,calculator.compute(),calculator.updateDisplay()})),allClearButton.addEventListener("click",(()=>{calculator.clear(),calculator.updateDisplay()})),deleteButton.addEventListener("click",(()=>{calculator.delete(),calculator.updateDisplay()})),signButton.addEventListener("click",(()=>{calculator.changeSign(),calculator.updateDisplay()})),sqrtButton.addEventListener("click",(()=>{calculator.getSqrt(),calculator.updateDisplay()})),percentButton.addEventListener("click",(()=>{calculator.getPercent(),calculator.updateDisplay()}));